{"ast":null,"code":"import _slicedToArray from\"D:\\\\my-own-social-network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from\"react\";import ProfileInfoForm from\"./ProfileInfoForm\";import ProfileDescription from\"./ProfileDescription\";import ProfileAvatar from\"./ProfileAvatar\";var ProfileInfo=function ProfileInfo(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];var handleSubmit=useCallback(function(userData){props.updateUserData(userData);setEditMode(false);},[]);var activateEditMode=useCallback(function(){setEditMode(true);},[]);var deactivateEditMode=useCallback(function(){props.toggleProfileIsUpdating(false);setEditMode(false);},[]);//отображать только в случае когда выключен эдит мод и не происходит обновление профиля (в ProfileInfoForm )\nvar descriptionOrForm=!editMode&&!props.profileIsUpdating?React.createElement(ProfileDescription,{userData:props.userData,isOwner:props.isOwner,activateEditMode:activateEditMode,userStatus:props.userStatus,sendNewUserStatus:props.sendNewUserStatus,ownerId:props.ownerId})//initialValues автоматически раскидывается по полям, так как совпадают имена\n:React.createElement(ProfileInfoForm,{contacts:props.userData.contacts,onSubmit:handleSubmit,initialValues:props.userData,deactivateEditMode:deactivateEditMode});return React.createElement(React.Fragment,null,React.createElement(ProfileAvatar,{userAvatar:props.userData.photos,isOwner:props.isOwner,updateUserPhoto:props.updateUserPhoto,ownerId:props.ownerId,startChatting:props.startChatting,history:props.history,urlUserId:props.urlUserId}),descriptionOrForm);};export default ProfileInfo;","map":{"version":3,"sources":["D:/my-own-social-network/src/components/Profile/ProfileInfo/ProfileInfo.jsx"],"names":["React","useCallback","useState","ProfileInfoForm","ProfileDescription","ProfileAvatar","ProfileInfo","props","editMode","setEditMode","handleSubmit","userData","updateUserData","activateEditMode","deactivateEditMode","toggleProfileIsUpdating","descriptionOrForm","profileIsUpdating","isOwner","userStatus","sendNewUserStatus","ownerId","contacts","photos","updateUserPhoto","startChatting","history","urlUserId"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAAeC,WAAf,CAA4BC,QAA5B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,eAEGL,QAAQ,CAAC,KAAD,CAFX,wCAEtBM,QAFsB,eAEZC,WAFY,eAI7B,GAAMC,CAAAA,YAAY,CAAGT,WAAW,CAC9B,SAACU,QAAD,CAAc,CACZJ,KAAK,CAACK,cAAN,CAAqBD,QAArB,EACAF,WAAW,CAAC,KAAD,CAAX,CACD,CAJ6B,CAI3B,EAJ2B,CAAhC,CAMA,GAAMI,CAAAA,gBAAgB,CAAGZ,WAAW,CAClC,UAAM,CACJQ,WAAW,CAAC,IAAD,CAAX,CACD,CAHiC,CAG/B,EAH+B,CAApC,CAKA,GAAMK,CAAAA,kBAAkB,CAAGb,WAAW,CACpC,UAAM,CACJM,KAAK,CAACQ,uBAAN,CAA8B,KAA9B,EACAN,WAAW,CAAC,KAAD,CAAX,CACD,CAJmC,CAIjC,EAJiC,CAAtC,CAMA;AACA,GAAMO,CAAAA,iBAAiB,CAAG,CAACR,QAAD,EAAa,CAACD,KAAK,CAACU,iBAApB,CACxB,oBAAC,kBAAD,EAAoB,QAAQ,CAAEV,KAAK,CAACI,QAApC,CACoB,OAAO,CAAEJ,KAAK,CAACW,OADnC,CAEoB,gBAAgB,CAAEL,gBAFtC,CAGoB,UAAU,CAAEN,KAAK,CAACY,UAHtC,CAIoB,iBAAiB,CAAEZ,KAAK,CAACa,iBAJ7C,CAKoB,OAAO,CAAEb,KAAK,CAACc,OALnC,EAOA;AARwB,CAStB,oBAAC,eAAD,EAAiB,QAAQ,CAAEd,KAAK,CAACI,QAAN,CAAeW,QAA1C,CACiB,QAAQ,CAAEZ,YAD3B,CAEiB,aAAa,CAAEH,KAAK,CAACI,QAFtC,CAGiB,kBAAkB,CAAEG,kBAHrC,EATJ,CAgBA,MACE,yCACE,oBAAC,aAAD,EAAe,UAAU,CAAEP,KAAK,CAACI,QAAN,CAAeY,MAA1C,CACe,OAAO,CAAEhB,KAAK,CAACW,OAD9B,CAEe,eAAe,CAAEX,KAAK,CAACiB,eAFtC,CAGe,OAAO,CAAEjB,KAAK,CAACc,OAH9B,CAIe,aAAa,CAAEd,KAAK,CAACkB,aAJpC,CAKe,OAAO,CAAElB,KAAK,CAACmB,OAL9B,CAMe,SAAS,CAAEnB,KAAK,CAACoB,SANhC,EADF,CASGX,iBATH,CADF,CAcD,CApDD,CAsDA,cAAeV,CAAAA,WAAf","sourcesContent":["import React, {useCallback, useState} from \"react\";\r\nimport ProfileInfoForm from \"./ProfileInfoForm\";\r\nimport ProfileDescription from \"./ProfileDescription\";\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleSubmit = useCallback(\r\n    (userData) => {\r\n      props.updateUserData(userData);\r\n      setEditMode(false);\r\n    }, []);\r\n\r\n  const activateEditMode = useCallback(\r\n    () => {\r\n      setEditMode(true);\r\n    }, []);\r\n\r\n  const deactivateEditMode = useCallback(\r\n    () => {\r\n      props.toggleProfileIsUpdating(false);\r\n      setEditMode(false);\r\n    }, []);\r\n\r\n  //отображать только в случае когда выключен эдит мод и не происходит обновление профиля (в ProfileInfoForm )\r\n  const descriptionOrForm = !editMode && !props.profileIsUpdating ?\r\n    <ProfileDescription userData={props.userData}\r\n                        isOwner={props.isOwner}\r\n                        activateEditMode={activateEditMode}\r\n                        userStatus={props.userStatus}\r\n                        sendNewUserStatus={props.sendNewUserStatus}\r\n                        ownerId={props.ownerId}\r\n    />\r\n    //initialValues автоматически раскидывается по полям, так как совпадают имена\r\n    : <ProfileInfoForm contacts={props.userData.contacts}\r\n                       onSubmit={handleSubmit}\r\n                       initialValues={props.userData}\r\n                       deactivateEditMode={deactivateEditMode}\r\n    />;\r\n\r\n\r\n  return (\r\n    <>\r\n      <ProfileAvatar userAvatar={props.userData.photos}\r\n                     isOwner={props.isOwner}\r\n                     updateUserPhoto={props.updateUserPhoto}\r\n                     ownerId={props.ownerId}\r\n                     startChatting={props.startChatting}\r\n                     history={props.history}\r\n                     urlUserId={props.urlUserId}\r\n      />\r\n      {descriptionOrForm}\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default ProfileInfo;"]},"metadata":{},"sourceType":"module"}