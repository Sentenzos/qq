{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import styles from'../Dialogs.css';import Contact from\"./Contact\";import scrollTo from\"../../../common/JS/scrollTo\";var ContactsList=React.memo(function(props){var dateNow=Date.now()+new Date().getTimezoneOffset()*60e3;//при первой отрисовке отрисовать диалог который велся в последний раз\nuseEffect(function(){if(props.contactIs)return;//Т.к. dialogs могли не успеть прийти с сервера и задиспатчиться\nif(!props.dialogs[0])return;props.getMessagesList(props.dialogs[0].id);},[props.contactIs,props.dialogs,props.getMessagesList]);var dialogs=props.dialogs.map(function(d){return React.createElement(Contact,{photos:d.photos,userName:d.userName,newMessagesCount:d.newMessagesCount,key:d.id,userId:d.id,getMessagesList:props.getMessagesList,contactIs:props.contactIs,getDialogs:props.getDialogs,dateNow:dateNow,lastActivityDate:d.lastUserActivityDate});});return React.createElement(\"div\",{className:\"contactsList\",ref:props.forRef},dialogs);});export default ContactsList;","map":{"version":3,"sources":["D:/my-own-social-network/src/components/Dialogs/ContactsList/ContactsList.jsx"],"names":["React","useEffect","useRef","styles","Contact","scrollTo","ContactsList","memo","props","dateNow","Date","now","getTimezoneOffset","contactIs","dialogs","getMessagesList","id","map","d","photos","userName","newMessagesCount","getDialogs","lastUserActivityDate","forRef"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,MAA1B,KAAuC,OAAvC,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CAGA,GAAMC,CAAAA,YAAY,CAAGN,KAAK,CAACO,IAAN,CACnB,SAACC,KAAD,CAAW,CAET,GAAMC,CAAAA,OAAO,CAAGC,IAAI,CAACC,GAAL,GAAc,GAAID,CAAAA,IAAJ,GAAWE,iBAAX,GAAiC,IAA/D,CAEA;AACAX,SAAS,CAAC,UAAM,CACd,GAAIO,KAAK,CAACK,SAAV,CAAqB,OACrB;AACA,GAAI,CAACL,KAAK,CAACM,OAAN,CAAc,CAAd,CAAL,CAAuB,OACvBN,KAAK,CAACO,eAAN,CAAsBP,KAAK,CAACM,OAAN,CAAc,CAAd,EAAiBE,EAAvC,EACD,CALQ,CAKN,CAACR,KAAK,CAACK,SAAP,CAAkBL,KAAK,CAACM,OAAxB,CAAiCN,KAAK,CAACO,eAAvC,CALM,CAAT,CAOA,GAAMD,CAAAA,OAAO,CAAGN,KAAK,CAACM,OAAN,CAAcG,GAAd,CAAkB,SAAAC,CAAC,CAAI,CACrC,MAAO,qBAAC,OAAD,EAAS,MAAM,CAAEA,CAAC,CAACC,MAAnB,CACS,QAAQ,CAAED,CAAC,CAACE,QADrB,CAES,gBAAgB,CAAEF,CAAC,CAACG,gBAF7B,CAGS,GAAG,CAAEH,CAAC,CAACF,EAHhB,CAIS,MAAM,CAAEE,CAAC,CAACF,EAJnB,CAKS,eAAe,CAAER,KAAK,CAACO,eALhC,CAMS,SAAS,CAAEP,KAAK,CAACK,SAN1B,CAOS,UAAU,CAAEL,KAAK,CAACc,UAP3B,CAQS,OAAO,CAAEb,OARlB,CASS,gBAAgB,CAAES,CAAC,CAACK,oBAT7B,EAAP,CAWD,CAZe,CAAhB,CAcA,MACE,4BAAK,SAAS,CAAC,cAAf,CAA8B,GAAG,CAAEf,KAAK,CAACgB,MAAzC,EACGV,OADH,CADF,CAKD,CAhCkB,CAArB,CAoCA,cAAeR,CAAAA,YAAf","sourcesContent":["import React, {useEffect, useRef} from \"react\";\r\nimport styles from '../Dialogs.css';\r\nimport Contact from \"./Contact\";\r\nimport scrollTo from \"../../../common/JS/scrollTo\";\r\n\r\n\r\nconst ContactsList = React.memo(\r\n  (props) => {\r\n\r\n    const dateNow = Date.now() + (new Date().getTimezoneOffset() * 60e3);\r\n\r\n    //при первой отрисовке отрисовать диалог который велся в последний раз\r\n    useEffect(() => {\r\n      if (props.contactIs) return;\r\n      //Т.к. dialogs могли не успеть прийти с сервера и задиспатчиться\r\n      if (!props.dialogs[0]) return;\r\n      props.getMessagesList(props.dialogs[0].id);\r\n    }, [props.contactIs, props.dialogs, props.getMessagesList]);\r\n\r\n    const dialogs = props.dialogs.map(d => {\r\n      return <Contact photos={d.photos}\r\n                      userName={d.userName}\r\n                      newMessagesCount={d.newMessagesCount}\r\n                      key={d.id}\r\n                      userId={d.id}\r\n                      getMessagesList={props.getMessagesList}\r\n                      contactIs={props.contactIs}\r\n                      getDialogs={props.getDialogs}\r\n                      dateNow={dateNow}\r\n                      lastActivityDate={d.lastUserActivityDate}\r\n      />\r\n    });\r\n\r\n    return (\r\n      <div className=\"contactsList\" ref={props.forRef}>\r\n        {dialogs}\r\n      </div>\r\n    )\r\n  }\r\n);\r\n\r\n\r\nexport default ContactsList;\r\n"]},"metadata":{},"sourceType":"module"}