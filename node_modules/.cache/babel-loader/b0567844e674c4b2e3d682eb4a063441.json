{"ast":null,"code":"import axios from\"axios\";var instance=axios.create({withCredentials:true,baseURL:\"https://social-network.samuraijs.com/api/1.0/\",headers:{\"API-KEY\":\"fa3b8954-bbcb-4172-bf06-b3b545c95215\"}});export var profileAPI={getStatus:function getStatus(userId){return instance.get(\"profile/status/\".concat(userId));},sendNewStatus:function sendNewStatus(status){return instance.put(\"profile/status\",{status:status});},getUserData:function getUserData(userId){return instance.get(\"profile/\".concat(userId));},saveUserData:function saveUserData(userData){return instance.put(\"profile\",userData);},updatePhoto:function updatePhoto(photo){var formData=new FormData();formData.append(\"image\",photo);return instance.put(\"profile/photo\",formData,{\"Content-Type\":\"multipart/form-data\"});}};export var authAPI={getMe:function getMe(){return instance.get('auth/me');},login:function login(userData){return instance.post('auth/login',userData);},logout:function logout(){return instance.delete('auth/login');},getCaptcha:function getCaptcha(){return instance.get(\"security/get-captcha-url\");}};export var usersAPI={getUsers:function getUsers(params){var usersOnPage=params.usersOnPage,pageNumber=params.pageNumber;return instance.get(\"users?count=\".concat(usersOnPage,\"&page=\").concat(pageNumber));},searchUser:function searchUser(params){var usersOnPage=params.usersOnPage,pageNumber=params.pageNumber,wantedUser=params.wantedUser;return instance.get(\"users?count=\".concat(usersOnPage,\"&page=\").concat(pageNumber,\"&term=\").concat(wantedUser));},subscribe:function subscribe(userId){return instance.post(\"follow/\".concat(userId));},unsubscribe:function unsubscribe(userId){return instance.delete(\"follow/\".concat(userId));}};export var dialogsAPI={//начинает чат с человек и добавляет в список людей с которыми идет диалог (след. запрос). Возврвщает resultCode\nstartChatting:function startChatting(userId){return instance.put(\"dialogs/\".concat(userId));},//возвращает объект с массивом дата содержащим объекты в которых находятся id пользователей с которыми велись диалоги, а так же есть ли от них новые сообщения (ошибку не возвр) https://i.imgur.com/OYvjvXz.png\ngetAllDialogs:function getAllDialogs(){return instance.get(\"dialogs\");},sendMessage:function sendMessage(userId,message){return instance.post(\"dialogs/\".concat(userId,\"/messages\"),{body:message});},//возвращает объект с массивом с объектами содержащими сообщения от пользователя и информацию о том просмотрено ли сообщение https://i.imgur.com/aRAw8Gr.png\ngetMessagesList:function getMessagesList(userId){return instance.get(\"dialogs/\".concat(userId,\"/messages/new?newerThen=\",\"1-13-2019\"));},deleteMessage:function deleteMessage(messageId){return instance.delete(\"dialogs/messages/\".concat(messageId));}};","map":{"version":3,"sources":["D:/my-own-social-network/src/API/API.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","profileAPI","getStatus","userId","get","sendNewStatus","status","put","getUserData","saveUserData","userData","updatePhoto","photo","formData","FormData","append","authAPI","getMe","login","post","logout","delete","getCaptcha","usersAPI","getUsers","params","usersOnPage","pageNumber","searchUser","wantedUser","subscribe","unsubscribe","dialogsAPI","startChatting","getAllDialogs","sendMessage","message","body","getMessagesList","deleteMessage","messageId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"fa3b8954-bbcb-4172-bf06-b3b545c95215\"\r\n  }\r\n});\r\n\r\nexport const profileAPI = {\r\n  getStatus: (userId) => {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n  sendNewStatus: (status) => {\r\n    return instance.put(\"profile/status\", {status});\r\n  },\r\n  getUserData: (userId) => {\r\n    return instance.get(`profile/${userId}`);\r\n  },\r\n  saveUserData: (userData) => {\r\n    return instance.put(`profile`, userData);\r\n  },\r\n  updatePhoto(photo) {\r\n    let formData = new FormData();\r\n    formData.append(\"image\", photo);\r\n    return instance.put(`profile/photo`, formData, {\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    })\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  getMe: () => {\r\n    return instance.get('auth/me');\r\n  },\r\n  login: (userData) => {\r\n    return instance.post('auth/login', userData);\r\n  },\r\n  logout: () => {\r\n    return instance.delete('auth/login');\r\n  },\r\n  getCaptcha: () => {\r\n    return instance.get(\"security/get-captcha-url\");\r\n  }\r\n};\r\n\r\nexport const usersAPI = {\r\n  getUsers: (params) => {\r\n    const {usersOnPage, pageNumber} = params;\r\n    return instance.get(`users?count=${usersOnPage}&page=${pageNumber}`);\r\n  },\r\n  searchUser: (params) => {\r\n    const {usersOnPage, pageNumber, wantedUser} = params;\r\n    return instance.get(`users?count=${usersOnPage}&page=${pageNumber}&term=${wantedUser}`);\r\n  },\r\n  subscribe: (userId) => {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n  unsubscribe: (userId) => {\r\n    return instance.delete(`follow/${userId}`);\r\n  }\r\n};\r\n\r\nexport const dialogsAPI = {\r\n  //начинает чат с человек и добавляет в список людей с которыми идет диалог (след. запрос). Возврвщает resultCode\r\n  startChatting: (userId) => {\r\n    return instance.put(`dialogs/${userId}`);\r\n  },\r\n  //возвращает объект с массивом дата содержащим объекты в которых находятся id пользователей с которыми велись диалоги, а так же есть ли от них новые сообщения (ошибку не возвр) https://i.imgur.com/OYvjvXz.png\r\n  getAllDialogs: () => {\r\n    return  instance.get(\"dialogs\");\r\n  },\r\n  sendMessage: (userId, message) => {\r\n    return instance.post(`dialogs/${userId}/messages`, {body: message})\r\n  },\r\n  //возвращает объект с массивом с объектами содержащими сообщения от пользователя и информацию о том просмотрено ли сообщение https://i.imgur.com/aRAw8Gr.png\r\n  getMessagesList: (userId) => {\r\n    return instance.get(`dialogs/${userId}/messages/new?newerThen=${\"1-13-2019\"}`);\r\n  },\r\n  deleteMessage: (messageId) => {\r\n    return instance.delete(`dialogs/messages/${messageId}`)\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}