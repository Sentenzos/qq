{"ast":null,"code":"import React from\"react\";import{Field,reduxForm}from\"redux-form\";import{maxLengthCreator,required}from\"../../../utils/validators\";import{Input,Textarea}from\"../../../common/FormControl/FormControl\";var maxLength=maxLengthCreator(100);var ProfileInfoForm=React.memo(function(props){var contacts=props.contacts,handleSubmit=props.handleSubmit,deactivateEditMode=props.deactivateEditMode;return React.createElement(\"form\",{className:\"profile-form\",onSubmit:handleSubmit},React.createElement(\"div\",{className:\"profile-form__cancel-button\",onClick:deactivateEditMode,onMouseDown:function onMouseDown(e){e.preventDefault();}},\"cancel\"),React.createElement(\"label\",{className:\"profile-form__accept-button-label\",onMouseDown:function onMouseDown(e){e.preventDefault();}},\"accept\",React.createElement(\"button\",{className:\"profile-form__accept-button\"})),React.createElement(\"div\",{className:\"profile-form__body\"},React.createElement(\"h4\",{className:\"profile-form__basic-info\"},\"Basic information\"),React.createElement(Field,{type:\"text\",name:\"fullName\",component:Input,placeholder:\"Full Name\",validate:[maxLength,required],className:\"profile-form__full-name-input\",wrapperClassName:\"profile-form__input-body\"}),React.createElement(Field,{type:\"text\",name:\"aboutMe\",component:Input,placeholder:\"About me\",validate:[maxLength,required],className:\"profile-form__about-me-input\",wrapperClassName:\"profile-form__input-body\"}),React.createElement(Field,{type:\"checkbox\",name:\"lookingForAJob\",component:Input,className:\"profile-form__checkbox\",wrapperClassName:\"profile-form__input-body\",textright:\"Looking for a job?\"}),React.createElement(Field,{name:\"lookingForAJobDescription\",component:Textarea,placeholder:\"Description\",validate:[maxLength,required],className:\"profile-form__textarea\",wrapperClassName:\"profile-form__textarea-body\"}),React.createElement(\"h4\",{className:\"profile-form__contacts\"},\"Contacts\"),Object.keys(contacts).map(function(key){return React.createElement(Field,{key:key,type:\"text\",name:\"contacts.\".concat(key),component:Input,placeholder:\"\".concat(key),validate:[maxLength],className:\"profile-form__contact\",wrapperClassName:\"profile-form__contact-body\"});})),props.error?React.createElement(\"div\",{className:\"profile-form__async-error\"},props.error):null);});{/*<form onSubmit={handleSubmit}>*/}{/*  <Field type={\"text\"} name={\"fullName\"} component={Input} placeholder={\"Full Name\"} validate={[maxLength]}/>*/}{/*  <Field type={\"text\"} name={\"aboutMe\"} component={Input} placeholder={\"About me\"} validate={[maxLength]}/>*/}{/*  <span>Looking for a job?</span>*/}{/*  <Field type={\"checkbox\"} name={\"lookingForAJob\"} component={Input} placeholder={\"Looking for a job\"}*/}{/*         validate={[maxLength]}/>*/}{/*  <Field type={\"text\"} name={\"lookingForAJobDescription\"} component={Input}*/}{/*         placeholder={\"Looking for a job description\"} validate={[maxLength]}/>*/}{/*  <div>*/}{/*    <b>Contacts:</b>*/}{/*    <ul>*/}{/*      {Object.keys(contacts).map(key => {*/}{/*        return <Field key={key} type={\"text\"} name={`contacts.${key}`} component={Input} placeholder={`${key}`}*/}{/*                      validate={[maxLength]}/>*/}{/*      })}*/}{/*    </ul>*/}{/*  </div>*/}{/*  {props.error ? <div>{props.error}</div> : null}*/}{/*  <button>Submit</button>*/}{/*</form>*/}export default reduxForm({form:\"profileData\"})(ProfileInfoForm);","map":{"version":3,"sources":["D:/my-own-social-network/src/components/Profile/ProfileInfo/ProfileInfoForm.jsx"],"names":["React","Field","reduxForm","maxLengthCreator","required","Input","Textarea","maxLength","ProfileInfoForm","memo","props","contacts","handleSubmit","deactivateEditMode","e","preventDefault","Object","keys","map","key","error","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Input, Textarea} from \"../../../common/FormControl/FormControl\";\r\n\r\n\r\nconst maxLength = maxLengthCreator(100);\r\n\r\nconst ProfileInfoForm = React.memo((props) => {\r\n\r\n  const {contacts, handleSubmit, deactivateEditMode} = props;\r\n\r\n  return (\r\n    <form className=\"profile-form\" onSubmit={handleSubmit}>\r\n      <div className=\"profile-form__cancel-button\"\r\n           onClick={deactivateEditMode}\r\n           onMouseDown={(e) => {\r\n             e.preventDefault()\r\n           }}\r\n      >cancel\r\n      </div>\r\n      <label className=\"profile-form__accept-button-label\"\r\n             onMouseDown={(e) => {\r\n               e.preventDefault()\r\n             }}>accept\r\n        <button className=\"profile-form__accept-button\"/>\r\n      </label>\r\n      <div className=\"profile-form__body\">\r\n        <h4 className=\"profile-form__basic-info\">Basic information</h4>\r\n        <Field type={\"text\"} name={\"fullName\"} component={Input} placeholder={\"Full Name\"}\r\n               validate={[maxLength, required]}\r\n               className=\"profile-form__full-name-input\"\r\n               wrapperClassName=\"profile-form__input-body\"\r\n        />\r\n        <Field type={\"text\"} name={\"aboutMe\"} component={Input} placeholder={\"About me\"}\r\n               validate={[maxLength, required]}\r\n               className=\"profile-form__about-me-input\"\r\n               wrapperClassName=\"profile-form__input-body\"\r\n        />\r\n        <Field type={\"checkbox\"} name={\"lookingForAJob\"} component={Input}\r\n               className=\"profile-form__checkbox\"\r\n               wrapperClassName=\"profile-form__input-body\"\r\n               textright={\"Looking for a job?\"}\r\n        />\r\n        <Field name={\"lookingForAJobDescription\"} component={Textarea}\r\n               placeholder={\"Description\"} validate={[maxLength, required]}\r\n               className=\"profile-form__textarea\"\r\n               wrapperClassName=\"profile-form__textarea-body\"\r\n        />\r\n        <h4 className=\"profile-form__contacts\">Contacts</h4>\r\n        {Object.keys(contacts).map(key => {\r\n          return <Field key={key} type={\"text\"}\r\n                        name={`contacts.${key}`}\r\n                        component={Input}\r\n                        placeholder={`${key}`}\r\n                        validate={[maxLength]}\r\n                        className=\"profile-form__contact\"\r\n                        wrapperClassName=\"profile-form__contact-body\"\r\n          />\r\n        })}\r\n      </div>\r\n      {props.error ? <div className=\"profile-form__async-error\">{props.error}</div> : null}\r\n    </form>\r\n  )\r\n});\r\n\r\n\r\n{/*<form onSubmit={handleSubmit}>*/\r\n}\r\n{/*  <Field type={\"text\"} name={\"fullName\"} component={Input} placeholder={\"Full Name\"} validate={[maxLength]}/>*/\r\n}\r\n{/*  <Field type={\"text\"} name={\"aboutMe\"} component={Input} placeholder={\"About me\"} validate={[maxLength]}/>*/\r\n}\r\n{/*  <span>Looking for a job?</span>*/\r\n}\r\n{/*  <Field type={\"checkbox\"} name={\"lookingForAJob\"} component={Input} placeholder={\"Looking for a job\"}*/\r\n}\r\n{/*         validate={[maxLength]}/>*/\r\n}\r\n{/*  <Field type={\"text\"} name={\"lookingForAJobDescription\"} component={Input}*/\r\n}\r\n{/*         placeholder={\"Looking for a job description\"} validate={[maxLength]}/>*/\r\n}\r\n{/*  <div>*/\r\n}\r\n{/*    <b>Contacts:</b>*/\r\n}\r\n{/*    <ul>*/\r\n}\r\n{/*      {Object.keys(contacts).map(key => {*/\r\n}\r\n{/*        return <Field key={key} type={\"text\"} name={`contacts.${key}`} component={Input} placeholder={`${key}`}*/\r\n}\r\n{/*                      validate={[maxLength]}/>*/\r\n}\r\n{/*      })}*/\r\n}\r\n{/*    </ul>*/\r\n}\r\n{/*  </div>*/\r\n}\r\n{/*  {props.error ? <div>{props.error}</div> : null}*/\r\n}\r\n{/*  <button>Submit</button>*/\r\n}\r\n{/*</form>*/\r\n}\r\n\r\n\r\nexport default reduxForm(\r\n  {form: \"profileData\"}\r\n)(ProfileInfoForm);"]},"metadata":{},"sourceType":"module"}