{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\my-own-social-network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _toConsumableArray from\"D:\\\\my-own-social-network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\my-own-social-network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{dialogsAPI}from\"../../API/API\";import{dialogMessageSent}from\"./reduxFormReducer\";import{getUserData}from\"./profileReducer\";import{setError}from\"./appReducer\";var SET_DIALOGS=\"dialogsReducer/SET_DIALOGS\";var SET_MESSAGES_LIST=\"dialogsReducer/SET_MESSAGES_LIST\";var SET_CONTACT=\"dialogsReducer/SET_CONTACT\";var RESET_UNREAD_MESSAGE_COUNT=\"dialogsReducer/RESET_UNREAD_MESSAGE_COUNT\";var DELETE_MESSAGE=\"dialogsReducer/DELETE_MESSAGE\";var DELETING_MESSAGES=\"dialogsReducer/DELETING_MESSAGES\";var initialState={dialogs:[],messages:[],deletingMessages:[],contactIs:null};export var dialogsReducer=function dialogsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_DIALOGS:return _objectSpread({},state,{dialogs:action.dialogs});case SET_MESSAGES_LIST:return _objectSpread({},state,{messages:_toConsumableArray(action.messages)});case SET_CONTACT:return _objectSpread({},state,{contactIs:action.contactId});case DELETE_MESSAGE:return _objectSpread({},state,{messages:state.messages.filter(function(m){return m.id!==action.messageId;})});case DELETING_MESSAGES:return _objectSpread({},state,{deletingMessages:action.toggle?[].concat(_toConsumableArray(state.deletingMessages),[action.messageId]):state.deletingMessages.filter(function(m){return m!==action.messageId;})});default:return state;}};export var setDialogs=function setDialogs(dialogs){return{type:SET_DIALOGS,dialogs:dialogs};};export var setMessagesList=function setMessagesList(messages){return{type:SET_MESSAGES_LIST,messages:messages};};export var setContact=function setContact(contactId){return{type:SET_CONTACT,contactId:contactId};};export var setMessagesAfterDelete=function setMessagesAfterDelete(messageId){return{type:DELETE_MESSAGE,messageId:messageId};};export var deletingMessages=function deletingMessages(messageId,toggle){return{type:DELETING_MESSAGES,messageId:messageId,toggle:toggle};};export var getDialogs=function getDialogs(){return function _callee(dispatch){var res;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(dialogsAPI.getAllDialogs());case 3:res=_context.sent;dispatch(setDialogs(res.data));_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch(setError(true,_context.t0.message));throw _context.t0;case 11:case\"end\":return _context.stop();}}},null,null,[[0,7]]);};};export var getMessagesList=function getMessagesList(contactId){return function _callee2(dispatch,getState){var res;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(dialogsAPI.getMessagesList(contactId));case 3:res=_context2.sent;if(!res.data.error){dispatch(setMessagesList(res.data));dispatch(setContact(contactId));}else{dispatch(setError(true,\"При получении списка сообщений возникла ошибка.\"));}_context2.next=11;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);dispatch(setError(true,_context2.t0.message));throw _context2.t0;case 11:case\"end\":return _context2.stop();}}},null,null,[[0,7]]);};};export var sendMessage=function sendMessage(message){return function _callee3(dispatch,getState){var contactId,res;return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;contactId=getState().dialogsPage.contactIs;_context3.next=4;return _regeneratorRuntime.awrap(dialogsAPI.sendMessage(contactId,message));case 4:res=_context3.sent;if(!(res.data.resultCode===0)){_context3.next=13;break;}_context3.next=8;return _regeneratorRuntime.awrap(dispatch(getDialogs()));case 8:_context3.next=10;return _regeneratorRuntime.awrap(dispatch(getMessagesList(contactId)));case 10:dispatch(dialogMessageSent());//очистка поля ввода\n_context3.next=14;break;case 13:dispatch(setError(true,\"При отправке сообщения возникла ошибка.\"));case 14:_context3.next=20;break;case 16:_context3.prev=16;_context3.t0=_context3[\"catch\"](0);dispatch(setError(true,_context3.t0.message));throw _context3.t0;case 20:case\"end\":return _context3.stop();}}},null,null,[[0,16]]);};};export var startChatting=function startChatting(userId){return function _callee4(dispatch,getState){var res;return _regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return _regeneratorRuntime.awrap(dialogsAPI.startChatting(userId));case 3:res=_context4.sent;if(!(res.data.resultCode===0)){_context4.next=9;break;}_context4.next=7;return _regeneratorRuntime.awrap(dispatch(getMessagesList(userId)));case 7:_context4.next=10;break;case 9:dispatch(setError(true,\"Не удалось начать чат.\"));case 10:_context4.next=16;break;case 12:_context4.prev=12;_context4.t0=_context4[\"catch\"](0);dispatch(setError(true,_context4.t0.message));throw _context4.t0;case 16:case\"end\":return _context4.stop();}}},null,null,[[0,12]]);};};export var deleteMessage=function deleteMessage(messageId){return function _callee5(dispatch){var res;return _regeneratorRuntime.async(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;dispatch(deletingMessages(messageId,true));_context5.next=4;return _regeneratorRuntime.awrap(dialogsAPI.deleteMessage(messageId));case 4:res=_context5.sent;if(res.status===200){dispatch(setMessagesAfterDelete(messageId));dispatch(deletingMessages(messageId,false));}else{dispatch(setError(true,\"Не удалось удалить сообщение.\"));}_context5.next=12;break;case 8:_context5.prev=8;_context5.t0=_context5[\"catch\"](0);dispatch(setError(true,_context5.t0.message));throw _context5.t0;case 12:case\"end\":return _context5.stop();}}},null,null,[[0,8]]);};};","map":{"version":3,"sources":["D:/my-own-social-network/src/redux/reducers/dialogsReducer.js"],"names":["dialogsAPI","dialogMessageSent","getUserData","setError","SET_DIALOGS","SET_MESSAGES_LIST","SET_CONTACT","RESET_UNREAD_MESSAGE_COUNT","DELETE_MESSAGE","DELETING_MESSAGES","initialState","dialogs","messages","deletingMessages","contactIs","dialogsReducer","state","action","type","contactId","filter","m","id","messageId","toggle","setDialogs","setMessagesList","setContact","setMessagesAfterDelete","getDialogs","dispatch","getAllDialogs","res","data","message","getMessagesList","getState","error","sendMessage","dialogsPage","resultCode","startChatting","userId","deleteMessage","status"],"mappings":"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","sourcesContent":["import {dialogsAPI} from \"../../API/API\";\r\nimport {dialogMessageSent} from \"./reduxFormReducer\";\r\nimport {getUserData} from \"./profileReducer\";\r\nimport {setError} from \"./appReducer\";\r\n\r\n\r\nconst SET_DIALOGS = \"dialogsReducer/SET_DIALOGS\";\r\nconst SET_MESSAGES_LIST = \"dialogsReducer/SET_MESSAGES_LIST\";\r\nconst SET_CONTACT = \"dialogsReducer/SET_CONTACT\";\r\nconst RESET_UNREAD_MESSAGE_COUNT = \"dialogsReducer/RESET_UNREAD_MESSAGE_COUNT\";\r\nconst DELETE_MESSAGE = \"dialogsReducer/DELETE_MESSAGE\";\r\nconst DELETING_MESSAGES = \"dialogsReducer/DELETING_MESSAGES\";\r\n\r\n\r\nconst initialState = {\r\n  dialogs: [],\r\n  messages: [],\r\n  deletingMessages: [],\r\n  contactIs: null\r\n};\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DIALOGS:\r\n      return {\r\n        ...state,\r\n        dialogs: action.dialogs\r\n      };\r\n    case SET_MESSAGES_LIST:\r\n      return {\r\n        ...state,\r\n        messages: [...action.messages]\r\n      };\r\n    case SET_CONTACT:\r\n      return {\r\n        ...state,\r\n        contactIs: action.contactId\r\n      };\r\n    case DELETE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.filter(m => {\r\n          return m.id !== action.messageId\r\n        })\r\n      };\r\n    case DELETING_MESSAGES:\r\n      return {\r\n        ...state,\r\n        deletingMessages: action.toggle ? [...state.deletingMessages, action.messageId] :\r\n         state.deletingMessages.filter(m => m !== action.messageId)\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n\r\nexport const setDialogs = (dialogs) => ({type: SET_DIALOGS, dialogs});\r\nexport const setMessagesList = (messages) => ({type: SET_MESSAGES_LIST, messages});\r\nexport const setContact = (contactId) => ({type: SET_CONTACT, contactId});\r\nexport const setMessagesAfterDelete = (messageId) => ({type: DELETE_MESSAGE, messageId});\r\nexport const deletingMessages = (messageId, toggle) => ({type: DELETING_MESSAGES, messageId, toggle});\r\n\r\n\r\nexport const getDialogs = () => async (dispatch) => {\r\n  try {\r\n    const res = await dialogsAPI.getAllDialogs();\r\n    dispatch(setDialogs(res.data));\r\n  } catch (e) {\r\n    dispatch(setError(true, e.message));\r\n    throw e\r\n  }\r\n};\r\n\r\nexport const getMessagesList = (contactId) => async (dispatch, getState) => {\r\n  try {\r\n    const res = await dialogsAPI.getMessagesList(contactId);\r\n    if (!res.data.error) {\r\n      dispatch(setMessagesList(res.data));\r\n      dispatch(setContact(contactId));\r\n    } else {\r\n      dispatch(setError(true, \"При получении списка сообщений возникла ошибка.\"));\r\n    }\r\n  } catch (e) {\r\n    dispatch(setError(true, e.message));\r\n    throw e\r\n  }\r\n};\r\n\r\nexport const sendMessage = (message) => async (dispatch, getState) => {\r\n  try {\r\n    const contactId = getState().dialogsPage.contactIs;\r\n    const res = await dialogsAPI.sendMessage(contactId, message);\r\n    if (res.data.resultCode === 0) {\r\n      await dispatch(getDialogs());\r\n      await dispatch(getMessagesList(contactId));\r\n      dispatch(dialogMessageSent()); //очистка поля ввода\r\n    } else {\r\n      dispatch(setError(true, \"При отправке сообщения возникла ошибка.\"));\r\n    }\r\n  } catch (e) {\r\n    dispatch(setError(true, e.message));\r\n    throw e\r\n  }\r\n};\r\n\r\nexport const startChatting = (userId) => async (dispatch, getState) => {\r\n  try {\r\n    const res = await dialogsAPI.startChatting(userId);\r\n    if (res.data.resultCode === 0) {\r\n      await dispatch(getMessagesList(userId));\r\n    } else {\r\n      dispatch(setError(true, \"Не удалось начать чат.\"));\r\n    }\r\n  } catch (e) {\r\n    dispatch(setError(true, e.message));\r\n    throw e\r\n  }\r\n};\r\n\r\nexport const deleteMessage = (messageId) => async (dispatch) => {\r\n  try {\r\n    dispatch(deletingMessages(messageId, true));\r\n    const res = await dialogsAPI.deleteMessage(messageId);\r\n    if (res.status === 200) {\r\n      dispatch(setMessagesAfterDelete(messageId));\r\n      dispatch(deletingMessages(messageId, false));\r\n    } else {\r\n      dispatch(setError(true, \"Не удалось удалить сообщение.\"));\r\n    }\r\n  } catch (e) {\r\n    dispatch(setError(true, e.message));\r\n    throw e\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}