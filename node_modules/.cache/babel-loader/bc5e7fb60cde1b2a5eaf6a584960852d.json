{"ast":null,"code":"import _objectWithoutProperties from\"D:\\\\my-own-social-network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React from'react';import cn from\"classnames\";import\"./FormControl.css\";var FormControl=function FormControl(props){var children=props.children,wrapperClassName=props.wrapperClassName,textleft=props.textleft,textright=props.textright,_props$meta=props.meta,touched=_props$meta.touched,error=_props$meta.error;return React.createElement(\"div\",{className:wrapperClassName+cn(touched&&error?\" form__input-body--error\":\"\")},textleft,children,textright,touched&&error?React.createElement(\"span\",{className:\"form__input-error\"},error):null);};export var Input=function Input(props){//inputWrapperClass - это мой кастомный пропс содержащий класс дял настройки css элемента содержащего input или textarea\nvar input=props.input,wrapperClassName=props.wrapperClassName,restProps=_objectWithoutProperties(props,[\"input\",\"wrapperClassName\"]);//Тут обязательно отдельно сделать деструктурирующее присваивание input'a и передать с использованием спрэд оператора\n//В противном случае он не будет реагировать на ошибки. Похоже в нем передается обработчик событий.\n//Плейсхолдер и тип вручную передавать не обязательно. Можно спрэд оператором как restProps\nreturn React.createElement(FormControl,props,React.createElement(\"input\",Object.assign({},input,restProps)));};export var Textarea=function Textarea(props){var input=props.input,wrapperClassName=props.wrapperClassName,restProps=_objectWithoutProperties(props,[\"input\",\"wrapperClassName\"]);return React.createElement(FormControl,props,React.createElement(\"textarea\",Object.assign({},input,restProps)));};","map":{"version":3,"sources":["D:/my-own-social-network/src/common/FormControl/FormControl.js"],"names":["React","cn","FormControl","props","children","wrapperClassName","textleft","textright","meta","touched","error","Input","input","restProps","Textarea"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,MAAO,mBAAP,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,IACtBC,CAAAA,QADsB,CACqDD,KADrD,CACtBC,QADsB,CACZC,gBADY,CACqDF,KADrD,CACZE,gBADY,CACMC,QADN,CACqDH,KADrD,CACMG,QADN,CACgBC,SADhB,CACqDJ,KADrD,CACgBI,SADhB,aACqDJ,KADrD,CAC2BK,IAD3B,CACkCC,OADlC,aACkCA,OADlC,CAC2CC,KAD3C,aAC2CA,KAD3C,CAE7B,MACE,4BAAK,SAAS,CAAEL,gBAAgB,CAAGJ,EAAE,CAACQ,OAAO,EAAIC,KAAX,4BAAgD,EAAjD,CAArC,EACGJ,QADH,CACaF,QADb,CACuBG,SADvB,CAEGE,OAAO,EAAIC,KAAX,CAAmB,4BAAM,SAAS,CAAC,mBAAhB,EAAqCA,KAArC,CAAnB,CAAwE,IAF3E,CADF,CAMD,CARD,CAUA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACR,KAAD,CAAW,CAC9B;AAD8B,GAEvBS,CAAAA,KAFuB,CAEkBT,KAFlB,CAEvBS,KAFuB,CAEhBP,gBAFgB,CAEkBF,KAFlB,CAEhBE,gBAFgB,CAEKQ,SAFL,0BAEkBV,KAFlB,+BAI9B;AACA;AACA;AACA,MACE,qBAAC,WAAD,CAAiBA,KAAjB,CACE,6CAAWS,KAAX,CAAsBC,SAAtB,EADF,CADF,CAKD,CAZM,CAcP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACX,KAAD,CAAW,IAC1BS,CAAAA,KAD0B,CACeT,KADf,CAC1BS,KAD0B,CACnBP,gBADmB,CACeF,KADf,CACnBE,gBADmB,CACEQ,SADF,0BACeV,KADf,+BAEjC,MACE,qBAAC,WAAD,CAAiBA,KAAjB,CACE,gDAAcS,KAAd,CAAyBC,SAAzB,EADF,CADF,CAKD,CAPM","sourcesContent":["import React from 'react';\r\nimport cn from \"classnames\";\r\nimport \"./FormControl.css\"\r\n\r\nconst FormControl = (props) => {\r\n  const {children, wrapperClassName, textleft, textright, meta: {touched, error}} = props;\r\n  return (\r\n    <div className={wrapperClassName + cn(touched && error ? ` form__input-body--error` : \"\")}>\r\n      {textleft}{children}{textright}\r\n      {touched && error ? <span className=\"form__input-error\">{error}</span> : null}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport const Input = (props) => {\r\n  //inputWrapperClass - это мой кастомный пропс содержащий класс дял настройки css элемента содержащего input или textarea\r\n  const {input, wrapperClassName, ...restProps} = props;\r\n\r\n  //Тут обязательно отдельно сделать деструктурирующее присваивание input'a и передать с использованием спрэд оператора\r\n  //В противном случае он не будет реагировать на ошибки. Похоже в нем передается обработчик событий.\r\n  //Плейсхолдер и тип вручную передавать не обязательно. Можно спрэд оператором как restProps\r\n  return (\r\n    <FormControl {...props} >\r\n      <input {...input} {...restProps}/>\r\n    </FormControl>\r\n  )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, wrapperClassName, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}