{"ast":null,"code":"import React from\"react\";import ProfileStatus from\"./ProfileStatus\";import editImg from\"../../../assets/img/edit.gif\";var ProfileDescription=React.memo(function(props){var _props$userData=props.userData,fullName=_props$userData.fullName,aboutMe=_props$userData.aboutMe,contacts=_props$userData.contacts,lookingForAJob=_props$userData.lookingForAJob,lookingForAJobDescription=_props$userData.lookingForAJobDescription,isOwner=props.isOwner,activateEditMode=props.activateEditMode;var isContacts=Object.values(contacts).find(function(value){return value;});return React.createElement(\"div\",{className:\"profile-description\"},isOwner&&React.createElement(\"div\",{className:\"edit-button\",onClick:activateEditMode},React.createElement(\"img\",{className:\"edit-button__img\",src:editImg})),React.createElement(\"div\",{className:\"profile-description__name\"},fullName),React.createElement(ProfileStatus,{userStatus:props.userStatus,sendNewUserStatus:props.sendNewUserStatus,isOwner:isOwner}),React.createElement(\"div\",{className:\"profile-description__data\"},React.createElement(\"table\",{className:\"profile-description__about-user\"},React.createElement(\"caption\",{className:\"about-user__caption\"},\"Basic information\"),React.createElement(\"thead\",null),React.createElement(\"tbody\",null,React.createElement(\"tr\",null,React.createElement(\"td\",{className:\"about-user__point\"},\"About me:\"),React.createElement(\"td\",{className:\"about-user__answer\"},aboutMe||\"-\")),React.createElement(\"tr\",null,React.createElement(\"td\",{className:\"about-user__point\"},\"Looking for a job:\"),React.createElement(\"td\",{className:\"about-user__answer\"},lookingForAJob?\"Yes\":\"No\")),React.createElement(\"tr\",null,React.createElement(\"td\",{className:\"about-user__point\"},\"Description:\"),React.createElement(\"td\",{className:\"about-user__answer\"},lookingForAJobDescription||\"-\")))),React.createElement(\"table\",{className:\"profile-description__contacts\"},React.createElement(\"caption\",{className:\"contacts__caption\"},\"Contacts\"),React.createElement(\"thead\",null),React.createElement(\"tbody\",null,isContacts?Object.keys(contacts).map(function(key){if(contacts[key]){return React.createElement(\"tr\",{key:key},React.createElement(\"td\",{className:\"contacts__contact-name\"},key),React.createElement(\"td\",{className:\"contacts__contact-link\"},contacts[key]));}}):React.createElement(\"tr\",null,React.createElement(\"td\",null,\"Not specified\"))))));});{/*<div>*/}{/*  <ProfileStatus userStatus={props.userStatus}*/}{/*                 sendNewUserStatus={props.sendNewUserStatus}*/}{/*  />*/}{/*  <div><b>Full Name: </b>{fullName}</div>*/}{/*  <div><b>About me: </b>{aboutMe}</div>*/}{/*  <div><b>Looking for a job: </b>{lookingForAJob ? \"Yes\" : \"No\"}</div>*/}{/*  <div><b>Description: </b>{lookingForAJobDescription}</div>*/}{/*  {isContacts &&*/}{/*  <div>*/}{/*    <b>Contacts:</b>*/}{/*    <ul>*/}{/*      {Object.keys(contacts).map(key => {*/}{/*        if (contacts[key]) {*/}{/*          return (*/}{/*            <li key={key}>*/}{/*              <b>{key}: </b>{contacts[key]}*/}{/*            </li>)*/}{/*        }*/}{/*      })}*/}{/*    </ul>*/}{/*  </div>}*/}{/*  {isOwner && <button onClick={activateEditMode}>Edit</button>}*/}{/*  {!isOwner && ownerId && <button onClick={startChat}>ChatWall</button>}*/}{/*</div>*/}export default ProfileDescription;","map":{"version":3,"sources":["D:/my-own-social-network/src/components/Profile/ProfileInfo/ProfileDescription.jsx"],"names":["React","ProfileStatus","editImg","ProfileDescription","memo","props","userData","fullName","aboutMe","contacts","lookingForAJob","lookingForAJobDescription","isOwner","activateEditMode","isContacts","Object","values","find","value","userStatus","sendNewUserStatus","keys","map","key"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport editImg from \"../../../assets/img/edit.gif\";\r\n\r\nconst ProfileDescription = React.memo((props) => {\r\n\r\n  const {\r\n    userData: {\r\n      fullName, aboutMe, contacts,\r\n      lookingForAJob, lookingForAJobDescription\r\n    },\r\n    isOwner, activateEditMode\r\n  } = props;\r\n\r\n  const isContacts = Object.values(contacts).find(value => {\r\n    return value\r\n  });\r\n\r\n  return (\r\n    <div className=\"profile-description\">\r\n      {\r\n        isOwner &&\r\n        <div className=\"edit-button\" onClick={activateEditMode}><img className=\"edit-button__img\" src={editImg}/></div>\r\n      }\r\n      <div className=\"profile-description__name\">{fullName}</div>\r\n      <ProfileStatus userStatus={props.userStatus}\r\n                     sendNewUserStatus={props.sendNewUserStatus}\r\n                     isOwner={isOwner}\r\n      />\r\n      <div className=\"profile-description__data\">\r\n        <table className=\"profile-description__about-user\">\r\n          <caption className=\"about-user__caption\">Basic information</caption>\r\n          <thead/>\r\n          <tbody>\r\n          <tr>\r\n            <td className=\"about-user__point\">About me:</td>\r\n            <td className=\"about-user__answer\">{aboutMe || \"-\"}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"about-user__point\">\r\n              Looking for a job:\r\n            </td>\r\n            <td className=\"about-user__answer\">\r\n              {lookingForAJob ? \"Yes\" : \"No\"}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"about-user__point\">\r\n              Description:\r\n            </td>\r\n            <td className=\"about-user__answer\">\r\n              {lookingForAJobDescription || \"-\"}\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n        <table className=\"profile-description__contacts\">\r\n          <caption className=\"contacts__caption\">Contacts</caption>\r\n          <thead/>\r\n          <tbody>\r\n          {\r\n            isContacts ?\r\n              Object.keys(contacts).map(key => {\r\n                if (contacts[key]) {\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td className=\"contacts__contact-name\">{key}</td>\r\n                      <td className=\"contacts__contact-link\">{contacts[key]}</td>\r\n                    </tr>)\r\n                }\r\n              }) : <tr>\r\n                <td>Not specified</td>\r\n              </tr>\r\n          }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\n{/*<div>*/\r\n}\r\n{/*  <ProfileStatus userStatus={props.userStatus}*/\r\n}\r\n{/*                 sendNewUserStatus={props.sendNewUserStatus}*/\r\n}\r\n{/*  />*/\r\n}\r\n{/*  <div><b>Full Name: </b>{fullName}</div>*/\r\n}\r\n{/*  <div><b>About me: </b>{aboutMe}</div>*/\r\n}\r\n{/*  <div><b>Looking for a job: </b>{lookingForAJob ? \"Yes\" : \"No\"}</div>*/\r\n}\r\n{/*  <div><b>Description: </b>{lookingForAJobDescription}</div>*/\r\n}\r\n{/*  {isContacts &&*/\r\n}\r\n{/*  <div>*/\r\n}\r\n{/*    <b>Contacts:</b>*/\r\n}\r\n{/*    <ul>*/\r\n}\r\n{/*      {Object.keys(contacts).map(key => {*/\r\n}\r\n{/*        if (contacts[key]) {*/\r\n}\r\n{/*          return (*/\r\n}\r\n{/*            <li key={key}>*/\r\n}\r\n{/*              <b>{key}: </b>{contacts[key]}*/\r\n}\r\n{/*            </li>)*/\r\n}\r\n{/*        }*/\r\n}\r\n{/*      })}*/\r\n}\r\n{/*    </ul>*/\r\n}\r\n{/*  </div>}*/\r\n}\r\n{/*  {isOwner && <button onClick={activateEditMode}>Edit</button>}*/\r\n}\r\n{/*  {!isOwner && ownerId && <button onClick={startChat}>ChatWall</button>}*/\r\n}\r\n{/*</div>*/\r\n}\r\n\r\nexport default ProfileDescription;"]},"metadata":{},"sourceType":"module"}