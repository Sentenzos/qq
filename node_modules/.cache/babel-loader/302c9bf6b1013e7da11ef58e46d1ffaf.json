{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";import cn from\"classnames\";import{NavLink}from\"react-router-dom\";import getDate from\"../../../common/JS/getDate\";import scrollTo from\"../../../common/JS/scrollTo\";var Contact=React.memo(function(props){var small=props.photos.small,userName=props.userName,newMessagesCount=props.newMessagesCount,userId=props.userId,getMessagesList=props.getMessagesList,contactIs=props.contactIs,getDialogs=props.getDialogs,lastActivityDate=props.lastActivityDate,dateNow=props.dateNow;var avatarElem=useRef(null);var onlineStatus=dateNow-new Date(lastActivityDate)>60e3*10;var lastOnline=new Date(lastActivityDate);useEffect(function(){if(!small)return;avatarElem.current.style.backgroundImage=\"url(\".concat(small,\")\");},[small]);var handleOnClick=function handleOnClick(){getMessagesList(userId);getDialogs();};return React.createElement(\"div\",{className:cn(\"contact\",contactIs===userId&&\"dialog-with\"),onClick:handleOnClick},React.createElement(NavLink,{to:\"/profile/\".concat(userId)},React.createElement(\"div\",{className:\"contact__avatar\",ref:avatarElem},React.createElement(\"div\",{className:\"contact__last-online\"},\"Last online: \".concat(getDate(lastOnline).getFullDate)))),React.createElement(\"div\",{className:\"contact__name\"},userName),React.createElement(\"div\",{className:cn(\"contact__online-status\",onlineStatus?\"contact__online-status--offline\":\"contact__online-status--online\")},onlineStatus?\"offline\":\"online\"),newMessagesCount?React.createElement(\"div\",{className:\"contact__new-messages\"},newMessagesCount):null);});export default Contact;","map":{"version":3,"sources":["D:/my-own-social-network/src/components/Dialogs/ContactsList/Contact.jsx"],"names":["React","useEffect","useRef","useState","cn","NavLink","getDate","scrollTo","Contact","memo","props","small","photos","userName","newMessagesCount","userId","getMessagesList","contactIs","getDialogs","lastActivityDate","dateNow","avatarElem","onlineStatus","Date","lastOnline","current","style","backgroundImage","handleOnClick","getFullDate"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,MAA1B,CAAkCC,QAAlC,KAAiD,OAAjD,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,OAAQC,OAAR,KAAsB,kBAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,4BAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CAGA,GAAMC,CAAAA,OAAO,CAAGR,KAAK,CAACS,IAAN,CACd,SAACC,KAAD,CAAW,IAGEC,CAAAA,KAHF,CAMLD,KANK,CAGPE,MAHO,CAGED,KAHF,CAGUE,QAHV,CAMLH,KANK,CAGUG,QAHV,CAIPC,gBAJO,CAMLJ,KANK,CAIPI,gBAJO,CAIWC,MAJX,CAMLL,KANK,CAIWK,MAJX,CAImBC,eAJnB,CAMLN,KANK,CAImBM,eAJnB,CAKPC,SALO,CAMLP,KANK,CAKPO,SALO,CAKIC,UALJ,CAMLR,KANK,CAKIQ,UALJ,CAKgBC,gBALhB,CAMLT,KANK,CAKgBS,gBALhB,CAKkCC,OALlC,CAMLV,KANK,CAKkCU,OALlC,CAOT,GAAMC,CAAAA,UAAU,CAAGnB,MAAM,CAAC,IAAD,CAAzB,CACA,GAAMoB,CAAAA,YAAY,CAAIF,OAAO,CAAG,GAAIG,CAAAA,IAAJ,CAASJ,gBAAT,CAAX,CAA0C,KAAO,EAAtE,CACA,GAAMK,CAAAA,UAAU,CAAG,GAAID,CAAAA,IAAJ,CAASJ,gBAAT,CAAnB,CAEAlB,SAAS,CAAC,UAAM,CACd,GAAI,CAACU,KAAL,CAAY,OACZU,UAAU,CAACI,OAAX,CAAmBC,KAAnB,CAAyBC,eAAzB,eAAkDhB,KAAlD,MACD,CAHQ,CAGN,CAACA,KAAD,CAHM,CAAT,CAKA,GAAMiB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BZ,eAAe,CAACD,MAAD,CAAf,CACAG,UAAU,GACX,CAHD,CAKA,MACE,4BAAK,SAAS,CAAEd,EAAE,CAAC,SAAD,CAAYa,SAAS,GAAKF,MAAd,EAAwB,aAApC,CAAlB,CAAsE,OAAO,CAAEa,aAA/E,EACE,oBAAC,OAAD,EAAS,EAAE,oBAAcb,MAAd,CAAX,EACE,2BAAK,SAAS,CAAC,iBAAf,CAAiC,GAAG,CAAEM,UAAtC,EACE,2BAAK,SAAS,CAAC,sBAAf,yBAAuDf,OAAO,CAACkB,UAAD,CAAP,CAAoBK,WAA3E,EADF,CADF,CADF,CAME,2BAAK,SAAS,CAAC,eAAf,EAAgChB,QAAhC,CANF,CAOE,2BAAK,SAAS,CAAET,EAAE,CAAC,wBAAD,CAA2BkB,YAAY,CAAG,iCAAH,CACrD,gCADc,CAAlB,EACwCA,YAAY,CAAG,SAAH,CAAe,QADnE,CAPF,CAUIR,gBAAgB,CAAG,2BAAK,SAAS,CAAC,uBAAf,EAAwCA,gBAAxC,CAAH,CAAqE,IAVzF,CADF,CAeD,CArCa,CAAhB,CAyCA,cAAeN,CAAAA,OAAf","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport cn from \"classnames\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport getDate from \"../../../common/JS/getDate\";\r\nimport scrollTo from \"../../../common/JS/scrollTo\";\r\n\r\n\r\nconst Contact = React.memo(\r\n  (props) => {\r\n\r\n    const {\r\n      photos: {small}, userName,\r\n      newMessagesCount, userId, getMessagesList,\r\n      contactIs, getDialogs, lastActivityDate, dateNow\r\n    } = props;\r\n    const avatarElem = useRef(null);\r\n    const onlineStatus = (dateNow - new Date(lastActivityDate)) > (60e3 * 10);\r\n    const lastOnline = new Date(lastActivityDate);\r\n\r\n    useEffect(() => {\r\n      if (!small) return;\r\n      avatarElem.current.style.backgroundImage = `url(${small})`;\r\n    }, [small]);\r\n\r\n    const handleOnClick = () => {\r\n      getMessagesList(userId);\r\n      getDialogs();\r\n    };\r\n\r\n    return (\r\n      <div className={cn(\"contact\", contactIs === userId && \"dialog-with\")} onClick={handleOnClick}>\r\n        <NavLink to={`/profile/${userId}`}>\r\n          <div className=\"contact__avatar\" ref={avatarElem}>\r\n            <div className=\"contact__last-online\">{`Last online: ${getDate(lastOnline).getFullDate}`}</div>\r\n          </div>\r\n        </NavLink>\r\n        <div className=\"contact__name\">{userName}</div>\r\n        <div className={cn(\"contact__online-status\", onlineStatus ? \"contact__online-status--offline\"\r\n          : \"contact__online-status--online\")}>{onlineStatus ? \"offline\" : \"online\"}</div>\r\n        {\r\n          newMessagesCount ? <div className=\"contact__new-messages\">{newMessagesCount}</div> : null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n);\r\n\r\n\r\nexport default Contact;"]},"metadata":{},"sourceType":"module"}