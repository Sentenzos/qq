{"ast":null,"code":"import React,{useEffect}from'react';import Users from\"./Users.jsx\";import{connect}from\"react-redux\";import{getUsers,portionControl,requestSubscribe,requestUnsubscribe,resetPaginatorPortion,searchUser,setMode,setPageNumber}from\"../../redux/reducers/usersReducer\";import{compose}from\"redux/es/redux\";import{withRouter}from'react-router-dom';//В этом компоненте и его детях \"источником истины\" преимущественно является строка URL\nvar UsersContainer=function UsersContainer(props){var pageNumber=props.match.params.pageNumber||props.pageNumber;var mode=props.match.params.mode;var wantedUser=mode===\"search\"&&(props.match.params.wantedUser===undefined?\"\":props.match.params.wantedUser);useEffect(function(){if(mode===\"all\"){props.getUsers({pageNumber:pageNumber,usersOnPage:props.usersOnPage});}else if(mode===\"search\"){props.searchUser({usersOnPage:props.usersOnPage,pageNumber:pageNumber,wantedUser:wantedUser});}},[props.usersOnPage,pageNumber,wantedUser,mode]);useEffect(function(){props.setMode(mode);},[mode]);//сбросится информации о страницих\nuseEffect(function(){return function(){if(mode===\"search\"){props.resetPaginatorPortion();props.setPageNumber(1);}};},[mode]);return React.createElement(Users,{portionSize:props.portionSize,totalUsersCount:props.totalUsersCount,usersOnPage:props.usersOnPage,users:props.users,url:\"/users/\".concat(mode,\"/$pageNumber$\")+(mode===\"search\"?\"/\".concat(wantedUser):\"\"),requestSubscribe:props.requestSubscribe,requestUnsubscribe:props.requestUnsubscribe,isSubscribing:props.isSubscribing,pageNumber:pageNumber,portionControl:props.portionControl,portionNumber:props.portionNumber,searchUser:props.searchUser,userWasNotFound:props.userWasNotFound,history:props.history,resetPaginatorPortion:props.resetPaginatorPortion,mode:mode,myId:props.myId});};var mapSTP=function mapSTP(state){return{myId:state.auth.id,users:state.usersPage.users,totalUsersCount:state.usersPage.totalUsersCount,pageNumber:state.usersPage.pageNumber,usersOnPage:state.usersPage.usersOnPage,portionSize:state.usersPage.portionSize,isSubscribing:state.usersPage.isSubscribing,isFetching:state.usersPage.isFetching,portionNumber:state.usersPage.paginatorPortion,userWasNotFound:state.usersPage.userWasNotFound};};export default compose(withRouter,connect(mapSTP,{getUsers:getUsers,requestSubscribe:requestSubscribe,requestUnsubscribe:requestUnsubscribe,portionControl:portionControl,searchUser:searchUser,resetPaginatorPortion:resetPaginatorPortion,setPageNumber:setPageNumber,setMode:setMode}))(UsersContainer);","map":{"version":3,"sources":["D:/my-own-social-network/src/components/Users/UsersContainer.jsx"],"names":["React","useEffect","Users","connect","getUsers","portionControl","requestSubscribe","requestUnsubscribe","resetPaginatorPortion","searchUser","setMode","setPageNumber","compose","withRouter","UsersContainer","props","pageNumber","match","params","mode","wantedUser","undefined","usersOnPage","portionSize","totalUsersCount","users","isSubscribing","portionNumber","userWasNotFound","history","myId","mapSTP","state","auth","id","usersPage","isFetching","paginatorPortion"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Users from \"./Users.jsx\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  getUsers,\r\n  portionControl,\r\n  requestSubscribe,\r\n  requestUnsubscribe,\r\n  resetPaginatorPortion,\r\n  searchUser,\r\n  setMode,\r\n  setPageNumber\r\n} from \"../../redux/reducers/usersReducer\";\r\nimport {compose} from \"redux/es/redux\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n//В этом компоненте и его детях \"источником истины\" преимущественно является строка URL\r\nconst UsersContainer = (props) => {\r\n\r\n  const pageNumber = props.match.params.pageNumber || props.pageNumber;\r\n  const mode = props.match.params.mode;\r\n  const wantedUser =\r\n    mode === \"search\" && (props.match.params.wantedUser === undefined ? \"\" :\r\n    props.match.params.wantedUser);\r\n\r\n  useEffect(() => {\r\n    if (mode === \"all\") {\r\n      props.getUsers({pageNumber, usersOnPage: props.usersOnPage})\r\n    } else if (mode === \"search\") {\r\n      props.searchUser({usersOnPage: props.usersOnPage, pageNumber, wantedUser});\r\n    }\r\n  }, [props.usersOnPage, pageNumber, wantedUser, mode]);\r\n\r\n  useEffect(() => {\r\n    props.setMode(mode);\r\n  }, [mode]);\r\n\r\n  //сбросится информации о страницих\r\n  useEffect(() => {\r\n    return () => {\r\n      if (mode === \"search\") {\r\n        props.resetPaginatorPortion();\r\n        props.setPageNumber(1);\r\n      }\r\n    }\r\n  }, [mode]);\r\n\r\n  return <Users portionSize={props.portionSize}\r\n                totalUsersCount={props.totalUsersCount}\r\n                usersOnPage={props.usersOnPage}\r\n                users={props.users}\r\n                url={`/users/${mode}/$pageNumber$` +\r\n                (mode === \"search\" ? `/${wantedUser}` : \"\")}\r\n                requestSubscribe={props.requestSubscribe}\r\n                requestUnsubscribe={props.requestUnsubscribe}\r\n                isSubscribing={props.isSubscribing}\r\n                pageNumber={pageNumber}\r\n                portionControl={props.portionControl}\r\n                portionNumber={props.portionNumber}\r\n                searchUser={props.searchUser}\r\n                userWasNotFound={props.userWasNotFound}\r\n                history={props.history}\r\n                resetPaginatorPortion={props.resetPaginatorPortion}\r\n                mode={mode}\r\n                myId={props.myId}\r\n  />\r\n};\r\n\r\n\r\nconst mapSTP = (state) => ({\r\n  myId: state.auth.id,\r\n  users: state.usersPage.users,\r\n  totalUsersCount: state.usersPage.totalUsersCount,\r\n  pageNumber: state.usersPage.pageNumber,\r\n  usersOnPage: state.usersPage.usersOnPage,\r\n  portionSize: state.usersPage.portionSize,\r\n  isSubscribing: state.usersPage.isSubscribing,\r\n  isFetching: state.usersPage.isFetching,\r\n  portionNumber: state.usersPage.paginatorPortion,\r\n  userWasNotFound: state.usersPage.userWasNotFound\r\n});\r\n\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapSTP, {\r\n      getUsers,\r\n      requestSubscribe,\r\n      requestUnsubscribe,\r\n      portionControl,\r\n      searchUser,\r\n      resetPaginatorPortion,\r\n      setPageNumber,\r\n      setMode\r\n    }\r\n  ))\r\n(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}