{"ast":null,"code":"import React,{useMemo,useCallback}from'react';import styles from'./Login.css';import{Field,reduxForm}from\"redux-form\";import{maxLengthCreator,required}from\"../../utils/validators\";import{Input}from\"../../common/FormControl/FormControl\";var LoginForm=React.memo(function(props){var maxLength=useCallback(maxLengthCreator(50),[]);return(//handleSubmit - обработчик переданный reduxForm\n//внутри себя он вызовет переданный нами в props onSubmit\nReact.createElement(\"form\",{onSubmit:props.handleSubmit,className:\"login-form\"},React.createElement(Field,{className:\"login-form__email-input\",type:\"text\",name:\"email\",component:Input,placeholder:\"email\",validate:[required,maxLength],wrapperClassName:\"login-form__input-body\"}),React.createElement(Field,{className:\"login-form__password-input\",type:\"password\",name:\"password\",component:Input,placeholder:\"password\",validate:[required,maxLength],wrapperClassName:\"login-form__input-body\"}),React.createElement(Field,{className:\"login-form__checkbox\",wrapperClassName:\"login-form__checkbox-body\",type:\"checkbox\",name:\"rememberMe\",component:Input,textleft:\"remember me\"}),props.captchaUrl&&React.createElement(\"div\",{className:\"login-form__captcha\"},\" \",React.createElement(\"img\",{alt:\"captcha\",className:\"login-form__captcha-img\",src:props.captchaUrl})),props.captchaUrl&&React.createElement(Field,{className:\"login-form__captcha-input\",type:\"text\",name:\"captcha\",component:Input,validate:[required,maxLength],wrapperClassName:\"login-form__input-body\"}),props.error?React.createElement(\"div\",{className:\"login-form__async-error\"},props.error):null,React.createElement(\"label\",{className:\"login-form__button\"},React.createElement(\"button\",{className:\"login-form__hidden-button\"}),\"Enter\")));});export default reduxForm({form:\"login\"})(LoginForm);","map":{"version":3,"sources":["D:/my-own-social-network/src/components/Login/LoginForm.jsx"],"names":["React","useMemo","useCallback","styles","Field","reduxForm","maxLengthCreator","required","Input","LoginForm","memo","props","maxLength","handleSubmit","captchaUrl","error","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,OAAf,CAAwBC,WAAxB,KAA0C,OAA1C,CACA,MAAOC,CAAAA,MAAP,KAAmB,aAAnB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,YAA/B,CACA,OAAQC,gBAAR,CAA0BC,QAA1B,KAAyC,wBAAzC,CACA,OAAQC,KAAR,KAAoB,sCAApB,CAMA,GAAMC,CAAAA,SAAS,CAAGT,KAAK,CAACU,IAAN,CAAW,SAACC,KAAD,CAAW,CAEtC,GAAMC,CAAAA,SAAS,CAAGV,WAAW,CAACI,gBAAgB,CAAC,EAAD,CAAjB,CAAuB,EAAvB,CAA7B,CAEA,MACE;AACA;AACA,4BAAM,QAAQ,CAAEK,KAAK,CAACE,YAAtB,CAAoC,SAAS,CAAC,YAA9C,EACE,oBAAC,KAAD,EAAO,SAAS,CAAC,yBAAjB,CAA2C,IAAI,CAAE,MAAjD,CAAyD,IAAI,CAAE,OAA/D,CAAwE,SAAS,CAAEL,KAAnF,CAA0F,WAAW,CAAE,OAAvG,CACO,QAAQ,CAAE,CAACD,QAAD,CAAWK,SAAX,CADjB,CAEO,gBAAgB,CAAE,wBAFzB,EADF,CAKE,oBAAC,KAAD,EAAO,SAAS,CAAC,4BAAjB,CAA8C,IAAI,CAAE,UAApD,CAAgE,IAAI,CAAE,UAAtE,CAAkF,SAAS,CAAEJ,KAA7F,CAAoG,WAAW,CAAE,UAAjH,CACO,QAAQ,CAAE,CAACD,QAAD,CAAWK,SAAX,CADjB,CAEO,gBAAgB,CAAE,wBAFzB,EALF,CASE,oBAAC,KAAD,EAAO,SAAS,CAAC,sBAAjB,CACO,gBAAgB,CAAE,2BADzB,CAEO,IAAI,CAAC,UAFZ,CAEuB,IAAI,CAAC,YAF5B,CAGO,SAAS,CAAEJ,KAHlB,CAIO,QAAQ,CAAC,aAJhB,EATF,CAgBGG,KAAK,CAACG,UAAN,EAAoB,2BAAK,SAAS,CAAC,qBAAf,MAAsC,2BAAK,GAAG,CAAC,SAAT,CAAmB,SAAS,CAAC,yBAA7B,CAAuD,GAAG,CAAEH,KAAK,CAACG,UAAlE,EAAtC,CAhBvB,CAiBGH,KAAK,CAACG,UAAN,EAAoB,oBAAC,KAAD,EAAO,SAAS,CAAC,2BAAjB,CAA6C,IAAI,CAAE,MAAnD,CAA2D,IAAI,CAAE,SAAjE,CAA4E,SAAS,CAAEN,KAAvF,CACO,QAAQ,CAAE,CAACD,QAAD,CAAWK,SAAX,CADjB,CAEO,gBAAgB,CAAE,wBAFzB,EAjBvB,CAsBGD,KAAK,CAACI,KAAN,CAAc,2BAAK,SAAS,CAAC,yBAAf,EAA0CJ,KAAK,CAACI,KAAhD,CAAd,CAA6E,IAtBhF,CAuBE,6BAAO,SAAS,CAAC,oBAAjB,EACE,8BAAQ,SAAS,CAAC,2BAAlB,EADF,SAvBF,CAHF,EAgCD,CApCiB,CAAlB,CAsCA,cAAeV,CAAAA,SAAS,CAAC,CACvBW,IAAI,CAAE,OADiB,CAAD,CAAT,CAEZP,SAFY,CAAf","sourcesContent":["import React, {useMemo, useCallback} from 'react';\r\nimport styles from './Login.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\nimport {Input} from \"../../common/FormControl/FormControl\"\r\n\r\n\r\n\r\n\r\n\r\nconst LoginForm = React.memo((props) => {\r\n\r\n  const maxLength = useCallback(maxLengthCreator(50), []);\r\n\r\n  return (\r\n    //handleSubmit - обработчик переданный reduxForm\r\n    //внутри себя он вызовет переданный нами в props onSubmit\r\n    <form onSubmit={props.handleSubmit} className=\"login-form\">\r\n      <Field className=\"login-form__email-input\" type={\"text\"} name={\"email\"} component={Input} placeholder={\"email\"}\r\n             validate={[required, maxLength]}\r\n             wrapperClassName={\"login-form__input-body\"}\r\n      />\r\n      <Field className=\"login-form__password-input\" type={\"password\"} name={\"password\"} component={Input} placeholder={\"password\"}\r\n             validate={[required, maxLength]}\r\n             wrapperClassName={\"login-form__input-body\"}\r\n      />\r\n      <Field className=\"login-form__checkbox\"\r\n             wrapperClassName={\"login-form__checkbox-body\"}\r\n             type=\"checkbox\" name=\"rememberMe\"\r\n             component={Input}\r\n             textleft=\"remember me\"\r\n\r\n      />\r\n      {props.captchaUrl && <div className=\"login-form__captcha\"> <img alt=\"captcha\" className=\"login-form__captcha-img\" src={props.captchaUrl}/></div>}\r\n      {props.captchaUrl && <Field className=\"login-form__captcha-input\" type={\"text\"} name={\"captcha\"} component={Input}\r\n                                  validate={[required, maxLength]}\r\n                                  wrapperClassName={\"login-form__input-body\"}\r\n      />}\r\n      {/*Асинхронная ошибка*/}\r\n      {props.error ? <div className=\"login-form__async-error\">{props.error}</div> : null}\r\n      <label className=\"login-form__button\">\r\n        <button className=\"login-form__hidden-button\"/>\r\n        Enter\r\n      </label>\r\n    </form>\r\n  )\r\n});\r\n\r\nexport default reduxForm({\r\n  form: \"login\"\r\n})(LoginForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}